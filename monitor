#### **1. Цель**  
Автоматизированный мониторинг Aztec Node с уведомлениями в Telegram при:  
- Отключении ноды (`❌`)  
- Ошибках JSON-RPC (`⛔`)  

---

#### **2. Функциональные требования**  

**2.1. Основной функционал**  
- Проверка ноды каждые 60 секунд через метод `node_getL2Tips`  
- Обработка ошибок:  
  - Нода недоступна (HTTP 404/5xx, таймаут 15 сек)  
  - Ошибка в ответе JSON-RPC  
  - Пустой ответ  

**2.2. Уведомления**  
Формат сообщений:  
```
[STATUS] [NODE_NAME]: [Описание]
```
Примеры:  
- `❌ Aztec Main: Нода недоступна (curl: 7)`  
- `⛔ Aztec Backup: Invalid method`  

**2.3. Логирование**  
Все события пишутся в `/root/aztec_check/aztec.log`:  
```log
[2025-05-30 12:00:00] ⛔ Aztec Main: Timeout
```

---

#### **3. Установка**  

**3.1. Создание структуры**  
```bash
mkdir -p ~/aztec_check
cd ~/aztec_check
touch config.conf aztec.sh aztec.log
chmod +x aztec.sh
```

**3.2. Конфиг (`config.conf`)**  
```ini
# Telegram
TG_TOKEN="botXXXXX:YYYYY"  # Заменить на реальный токен
TG_CHAT_ID="123456789"      # Заменить на chat_id

# Node
NODE_NAME="Aztec Main"
NODE_URL="http://localhost:8080"
```

**3.3. Скрипт (`aztec.sh`)**  
```bash
#!/bin/bash
CONFIG="$HOME/aztec_check/config.conf"
LOG="$HOME/aztec_check/aztec.log"
source "$CONFIG" || exit 1

# Блокировка параллельных запусков
if [ -f "/tmp/aztec.lock" ]; then exit; fi
touch /tmp/aztec.lock
trap 'rm -f /tmp/aztec.lock' EXIT

send_alert() {
    curl -s -X POST "https://api.telegram.org/bot$TG_TOKEN/sendMessage" \
        -d "chat_id=$TG_CHAT_ID" \
        -d "text=$1"
}

while true; do
    response=$(curl -s -m 15 -X POST -H 'Content-Type: application/json' \
        -d '{"jsonrpc":"2.0","method":"node_getL2Tips","params":[],"id":1}' \
        "$NODE_URL" 2>&1)
    
    if [[ $? -ne 0 ]]; then
        msg="❌ $NODE_NAME: Ошибка (curl: $?)"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $msg" >> "$LOG"
        send_alert "$msg"
    elif echo "$response" | grep -q '"error"'; then
        error=$(echo "$response" | jq -r '.error.message')
        msg="⛔ $NODE_NAME: $error"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $msg" >> "$LOG"
        send_alert "$msg"
    elif [[ -z "$response" ]]; then
        msg="❌ $NODE_NAME: Пустой ответ"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] $msg" >> "$LOG"
        send_alert "$msg"
    fi
    
    sleep 60
done
```

**3.4. Systemd сервис**  
```bash
sudo tee /etc/systemd/system/aztec-check.service >/dev/null <<EOF
[Unit]
Description=Aztec Node Monitor
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$HOME/aztec_check
ExecStart=$HOME/aztec_check/aztec.sh
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF
```

**3.5. Запуск**  
```bash
sudo systemctl daemon-reload
sudo systemctl enable aztec-check
sudo systemctl start aztec-check
```

---

#### **4. Управление**  

| Действие      | Команда                              |
|---------------|--------------------------------------|
| Статус        | `systemctl status aztec-check`       |
| Логи          | `tail -f ~/aztec_check/aztec.log`    |
| Остановка     | `sudo systemctl stop aztec-check`    |
| Удаление      | `sudo rm -rf ~/aztec_check /etc/systemd/system/aztec-check.service` |

---

**Гарантии:**  
✅ Уведомления только при ошибках  
✅ Автозапуск после перезагрузки сервера  
✅ Защита от зависаний (таймаут 15 сек)

